{
    "name": "spryker-eco/authorization-picking-app-backend-api",
    "type": "library",
    "description": "AuthorizationPickingAppBackendApi module",
    "license": "MIT",
    "require": {
        "php": ">=8.0",
        "psr/http-message": "^1.0.0",
        "spryker/glue-application-extension": "^1.10.0",
        "spryker/guzzle": "^2.0.0",
        "spryker/kernel": "^3.52.0",
        "spryker/oauth": "^2.7.0",
        "spryker/oauth-code-flow": "^0.1.0",
        "spryker/propel-orm": "^1.16.0",
        "spryker/symfony": "^3.0.0",
        "spryker/transfer": "^3.25.0",
        "spryker/user": "^3.9.0",
        "spryker/util-encoding": "^2.0.0"
    },
    "require-dev": {
        "codeception/module-asserts": "^3.0.0",
        "phpstan/phpstan": "1.8.10",
        "phpunit/phpunit": "^9.0.0",
        "spryker/application": "*",
        "spryker/code-sniffer": "*",
        "spryker/config": "*",
        "spryker/error-handler": "*",
        "spryker/glue-application": "*",
        "spryker/log": "*",
        "spryker/monolog": "*",
        "spryker/propel": "^3.34.0",
        "spryker/queue": "*",
        "spryker/testify": "^3.47.0"
    },
    "suggest": {
        "spryker/glue-application": "If you want to use plugins with glue application."
    },
    "autoload": {
        "psr-4": {
            "SprykerEco\\": "src/SprykerEco/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "SprykerEcoTest\\": "tests/SprykerEcoTest/"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "cs-check": "phpcs -p -s --standard=vendor/spryker/code-sniffer/Spryker/ruleset.xml src/ tests/",
        "cs-fix": "phpcbf -p --standard=vendor/spryker/code-sniffer/Spryker/ruleset.xml src/ tests/",
        "stan": "phpstan analyse -c phpstan.neon -l 7 src/",
        "test": "codecept run",
        "test-coverage": "codecept run --coverage-xml",
        "lowest": "validate-prefer-lowest -m",
        "lowest-setup": "composer update --prefer-lowest --prefer-stable --prefer-dist --no-interaction && cp composer.json composer.backup && composer require --dev dereuromark/composer-prefer-lowest && mv composer.backup composer.json"
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.0.x-dev"
        }
    },
    "config": {
        "sort-packages": true,
        "process-timeout": 600,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    }
}
