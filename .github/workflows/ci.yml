name: CI

env:
    APPLICATION_ENV: 'development'
    APPLICATION_STORE: 'DE'
    PROJECT: 'AuthorizationPickingAppBackendApi'
    SPRYKER_DB_VERSION: 10.2
    SPRYKER_DB_HOST: 127.0.0.1
    SPRYKER_DB_PORT: 3306
    SPRYKER_DB_DATABASE: eu-docker
    SPRYKER_DB_USERNAME: root
    SPRYKER_DB_PASSWORD: secret
    SPRYKER_DB_ROOT_PASSWORD: secret
    SPRYKER_DB_ALLOW_EMPTY_PASSWORD: false
    SPRYKER_DB_CHARACTER_SET: utf8
    SPRYKER_DB_COLLATE: utf8_general_ci

on:
    pull_request:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
    ci:
        name: 'AuthorizationPickingAppBackendApi'
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: false
            matrix:
                php: ['8.0', '8.2']

        steps:
            - uses: actions/checkout@v2

            - name: Setup Database
              uses: getong/mariadb-action@v1.1
              with:
                  host port: ${{ env.SPRYKER_DB_PORT }}
                  container port: ${{ env.SPRYKER_DB_PORT }}
                  character set server: ${{ env.SPRYKER_DB_CHARACTER_SET }}
                  collation server: ${{ env.SPRYKER_DB_COLLATE }}
                  mariadb version: ${{ env.SPRYKER_DB_VERSION }}
                  mysql database: ${{ env.SPRYKER_DB_DATABASE }}
                  mysql root password: ${{ env.SPRYKER_DB_ROOT_PASSWORD }}
                  mysql user: ${{ env.SPRYKER_DB_USERNAME }}
                  mysql password: ${{ env.SPRYKER_DB_PASSWORD }}

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: mbstring, intl, bcmath
                  tools: composer:v2

            - name: Configure sysctl limits
              run: |
                  sudo swapoff -a
                  sudo sysctl -w vm.swappiness=1
                  sudo sysctl -w fs.file-max=262144
                  sudo sysctl -w vm.max_map_count=262144
            - name: Composer get cache directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Composer cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-
            - name: Composer validate
              run: composer validate

            - name: Composer install
              run: |
                  composer --version
                  composer install
            - name: Run codestyle checks
              run: composer cs-check

            - name: Run codeception tests
              run: composer test

            - name: Run PHPStan
              run: composer phpstan

    lowest:
        name: AuthorizationPickingAppBackendApi Prefer Lowest (PHP ${{ matrix.php }})
        runs-on: ubuntu-18.04

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.0'
                    extensions: mbstring, intl, bcmath, pdo_mysql

            -   name: Composer Install
                run: composer install --prefer-dist --no-interaction --profile

            -   name: Composer Update
                run: composer update --prefer-lowest --prefer-dist --no-interaction --profile -vvv

            -   name: Prefer lowest installation
                run: composer require --dev dereuromark/composer-prefer-lowest;

            -   name: PHP syntax validation
                run: find ./src -path src -prune -o -type f -name '*.php' -print0 | xargs -0 -n1 -P4 php -l -n | (! grep -v "No syntax errors detected" )

            -   name: Prefer lowest validation
                run: vendor/bin/validate-prefer-lowest -m
