name: CI

on:
    pull_request:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
    validation:
        name: "Validation"
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: false
            matrix:
                include:
                    - php: '8.0'
                    - php: '8.2'

        env:
            APPLICATION_ENV: devtest
            APPLICATION_STORE: DE
            PROJECT: "AuthorizationPickingAppBackendApi"
            SPRYKER_DB_VERSION: 10.2
            SPRYKER_DB_HOST: 127.0.0.1
            SPRYKER_DB_PORT: 3306
            SPRYKER_DB_DATABASE: eu-docker
            SPRYKER_DB_USERNAME: root
            SPRYKER_DB_PASSWORD: secret
            SPRYKER_DB_ROOT_PASSWORD: secret
            SPRYKER_DB_ALLOW_EMPTY_PASSWORD: false
            SPRYKER_DB_CHARACTER_SET: utf8
            SPRYKER_DB_COLLATE: utf8_general_ci

        steps:
            - uses: actions/checkout@v2

            - name: Setup Database
              uses: getong/mariadb-action@v1.1
              with:
                  host port: ${{ env.SPRYKER_DB_PORT }}
                  container port: ${{ env.SPRYKER_DB_PORT }}
                  character set server: ${{ env.SPRYKER_DB_CHARACTER_SET }}
                  collation server: ${{ env.SPRYKER_DB_COLLATE }}
                  mariadb version: ${{ env.SPRYKER_DB_VERSION }}
                  mysql database: ${{ env.SPRYKER_DB_DATABASE }}
                  mysql root password: ${{ env.SPRYKER_DB_ROOT_PASSWORD }}
                  mysql user: ${{ env.SPRYKER_DB_USERNAME }}
                  mysql password: ${{ env.SPRYKER_DB_PASSWORD }}
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: mbstring, intl
                  tools: composer:v2

            - name: Configure sysctl limits
              run: |
                  sudo swapoff -a
                  sudo sysctl -w vm.swappiness=1
                  sudo sysctl -w fs.file-max=262144
                  sudo sysctl -w vm.max_map_count=262144
            - name: Composer get cache directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Composer cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-
            - name: Composer validate
              run: composer validate

            - name: Composer install
              run: |
                  composer --version
                  composer install

            - name: Run tests
              run: composer test

            - name: Run IDE generation
              run: ls -la ../../../

            - name: Run PHPStan
              run: composer stan

            - name: Run CodeStyle checks
              run: composer cs-check

    prefer-lowest:
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
            matrix:
                php-version: [
                        '8.0'
                ]

        steps:
            - uses: actions/checkout@v2

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Get Composer Cache Directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"

            - uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: mbstring, intl, pdo_mysql

            - name: Composer prefer lowest
              run: composer lowest-setup

            - name: Run tests
              run: composer test

            - name: Run PHPStan (currently not running properly)
              run: composer stan || true

            - name: Validate prefer lowest
              run: vendor/bin/validate-prefer-lowest -m
